Resources:
  sslSecurityGroupIngress: 
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0 
      
packages:
  yum:
    mod_ssl : []
    
files:
  /etc/httpd/conf.d/ssl.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      LoadModule ssl_module modules/mod_ssl.so
      SSLVerifyClient require
      SSLVerifyDepth 1
      SSLCACertificateFile "/etc/pki/tls/certs/ca.crt"
      Listen 443
      <VirtualHost *:443>
        <Proxy *>
          Order deny,allow
          Allow from all
        </Proxy>

        SSLEngine             on
        SSLCertificateFile    "/etc/pki/tls/certs/server.crt"
        SSLCertificateKeyFile "/etc/pki/tls/certs/server.key"
        SSLCipherSuite        EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
        SSLProtocol           All -SSLv2 -SSLv3
        SSLHonorCipherOrder   On
        
        # this option is mandatory to force apache to forward the client cert data to tomcat
        SSLOptions +ExportCertData
        
        Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
        Header always set X-Frame-Options DENY
        Header always set X-Content-Type-Options nosniff
        
        ProxyPass / http://localhost:8080/ retry=0
        ProxyPassReverse / http://localhost:8080/
        ProxyPreserveHost on
        
        LogFormat "%h (%{X-Forwarded-For}i) %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\""
        ErrorLog /var/log/httpd/elasticbeanstalk-error_log
        TransferLog /var/log/httpd/elasticbeanstalk-access_log
      </VirtualHost>

container_commands:
  01-copy-cert:
    command: cp .ebextensions/certificates/${mode}/server.pem /etc/pki/tls/certs/server.crt
  02-copy-private-key:
    command: cp .ebextensions/certificates/${mode}/server-private-key.pem /etc/pki/tls/certs/server.key
  03-copy-ca-certs:
    command: cp .ebextensions/certificates/${mode}/ca.crt /etc/pki/tls/certs/ca.crt
  #05-replace-tomcat-users: 
  #  command: cp .ebextensions/tomcat-users.xml /etc/tomcat8/tomcat-users.xml
  06-killhttpd:
    command: "killall httpd || true"
  07-waitforhttpddeath:
    command: "sleep 3"

## for use once figured out the load balanced version

#option_settings:
#  aws:elb:listener:443:
#    ListenerProtocol: TCP
#    InstancePort: 443
#    InstanceProtocol: TCP
#  aws:elb:listener:80:
#    ListenerEnabled: false
    
#option_settings:
#  - namespace: aws:elb:listener:443
#    option_name: ListenerProtocol
#    value: TCP
#  
#  - namespace: aws:elb:listener:443
#    option_name: InstancePort
#    value: 443
#  
#  - namespace: aws:elb:listener:443
#    option_name: InstanceProtocol
#    value: TCP
#  
#  - namespace: aws:elb:listener:80
#    option_name: ListenerEnabled
#    value: false
    
#  - namespace: aws:elb:listener:22
#    option_name: ListenerProtocol
#    value: TCP
#  
#  - namespace: aws:elb:listener:22
#    option_name: InstancePort
#    value: 22
#  
#  - namespace: aws:elb:listener:22
#    option_name: InstanceProtocol
#    value: TCP
   
#  - namespace: aws:elb:loadbalancer
#    option_name: SecurityGroups
#    value: sg-e7beb182
#  
#  - namespace: aws:elb:loadbalancer
#    option_name: ManagedSecurityGroup
#    value: sg-e7beb182
    
